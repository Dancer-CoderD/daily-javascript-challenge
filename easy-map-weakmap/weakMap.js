/**
 *
 * WeakMap 是 ES6 中新增的一种集合类型，叫做“弱映射”。
 * 它和 Map 是兄弟关系，API 还是 Map 那套 API。
 *
 * # 特性
 * 1. WeakMap 只能将对象作为键名（null 除外）。
 * 2. WeakMap 键名引用的对象是弱引用。
 *
 */
const e1 = document.getElementById("foo");
const e2 = document.getElementById("bar");
const arr = [
  [e1, "foo"],
  [e2, "bar"],
];

/**
 * # 强引用
 *
 * 上面的代码中，e1和e2是两个对象，通过arr数组对这两个对象添加了一些文字说明。
 * 但是这样就形成了arr对e1和e2的强引用。当我们不再需要这两个对象时，我们必须手动删除这个引用，否则垃圾回收机制不会释放e1和e2占用的内存。
 * 因为arr仍然存在着对对象的引用。
 *
 */
arr[0] = null;
arr[1] = null;

/**
 *
 * # 弱引用
 *
 * 指不能确保其引用的对象不会被垃圾回收器回收的引用。
 * 一个对象若只被弱引用所引用，则被认为是不可访问的，并可能在任何时刻被回收。
 * 也就是说当我们创建一个弱引用的ui想时，我们就可以让其自动被垃圾回收器回收。
 *
 * 总的来说，WeakMap 保持了对键名所引用对象的弱引用。
 * 只要所引用的对象的其他引用都被清楚，垃圾回收机制就会释放该对象所占用的内存。
 * 也就是说，一旦不再被需要，WeakMap 里面的键名对对象和所对应的键值对就会自动消失，不需要手动删除引用。
 *
 */
